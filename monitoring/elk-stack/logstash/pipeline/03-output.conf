# Logstash Output Configuration for SentientEdge
# Routes logs to appropriate Elasticsearch indices based on type and classification

output {
  # Security logs - separate index with extended retention
  if "security" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      user => "elastic"
      password => "${ELASTIC_PASSWORD}"
      index => "sentient-security-%{+YYYY.MM.dd}"
      template_name => "sentient-security"
      template_pattern => "sentient-security-*"
      template => {
        "mappings" => {
          "properties" => {
            "@timestamp" => { "type" => "date" }
            "level" => { "type" => "keyword" }
            "message" => { "type" => "text" }
            "category" => { "type" => "keyword" }
            "classification" => { "type" => "keyword" }
            "userId" => { "type" => "keyword" }
            "username" => { "type" => "keyword" }
            "ipAddress" => { "type" => "ip" }
            "geoip" => {
              "properties" => {
                "location" => { "type" => "geo_point" }
                "country_name" => { "type" => "keyword" }
                "city_name" => { "type" => "keyword" }
              }
            }
            "metadata" => { "type" => "object", "enabled" => false }
          }
        }
        "settings" => {
          "number_of_shards" => 1
          "number_of_replicas" => 1
          "index.lifecycle.name" => "sentient-security-policy"
        }
      }
    }
  }

  # Audit logs - compliance-focused index with long retention
  else if "audit" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      user => "elastic"
      password => "${ELASTIC_PASSWORD}"
      index => "sentient-audit-%{+YYYY.MM.dd}"
      template_name => "sentient-audit"
      template_pattern => "sentient-audit-*"
      template => {
        "mappings" => {
          "properties" => {
            "@timestamp" => { "type" => "date" }
            "level" => { "type" => "keyword" }
            "message" => { "type" => "text" }
            "category" => { "type" => "keyword" }
            "userId" => { "type" => "keyword" }
            "username" => { "type" => "keyword" }
            "operation" => { "type" => "keyword" }
            "success" => { "type" => "boolean" }
            "duration" => { "type" => "long" }
            "ipAddress" => { "type" => "ip" }
            "userAgent" => { "type" => "text" }
            "correlationId" => { "type" => "keyword" }
            "metadata" => { "type" => "object", "enabled" => false }
          }
        }
        "settings" => {
          "number_of_shards" => 1
          "number_of_replicas" => 1
          "index.lifecycle.name" => "sentient-audit-policy"
        }
      }
    }
  }

  # Telemetry logs - high-volume time-series data
  else if "telemetry" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      user => "elastic"
      password => "${ELASTIC_PASSWORD}"
      index => "sentient-telemetry-%{+YYYY.MM.dd}"
      template_name => "sentient-telemetry"
      template_pattern => "sentient-telemetry-*"
      template => {
        "mappings" => {
          "properties" => {
            "@timestamp" => { "type" => "date" }
            "droneId" => { "type" => "keyword" }
            "missionId" => { "type" => "keyword" }
            "location" => { "type" => "geo_point" }
            "metadata" => {
              "properties" => {
                "telemetry" => {
                  "properties" => {
                    "latitude" => { "type" => "float" }
                    "longitude" => { "type" => "float" }
                    "altitude_m" => { "type" => "float" }
                    "battery_percentage" => { "type" => "float" }
                    "ground_speed_ms" => { "type" => "float" }
                    "armed" => { "type" => "boolean" }
                    "flight_mode" => { "type" => "keyword" }
                    "system_status" => { "type" => "keyword" }
                  }
                }
              }
            }
          }
        }
        "settings" => {
          "number_of_shards" => 2
          "number_of_replicas" => 0
          "index.lifecycle.name" => "sentient-telemetry-policy"
          "index.refresh_interval" => "5s"
        }
      }
    }
  }

  # Performance and metrics logs
  else if "performance" in [tags] or "metrics" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      user => "elastic"
      password => "${ELASTIC_PASSWORD}"
      index => "sentient-metrics-%{+YYYY.MM.dd}"
      template_name => "sentient-metrics"
      template_pattern => "sentient-metrics-*"
      template => {
        "mappings" => {
          "properties" => {
            "@timestamp" => { "type" => "date" }
            "level" => { "type" => "keyword" }
            "category" => { "type" => "keyword" }
            "component" => { "type" => "keyword" }
            "duration" => { "type" => "long" }
            "success" => { "type" => "boolean" }
            "metadata" => { "type" => "object", "enabled" => false }
          }
        }
        "settings" => {
          "number_of_shards" => 1
          "number_of_replicas" => 0
          "index.lifecycle.name" => "sentient-metrics-policy"
        }
      }
    }
  }

  # Anomaly and alert logs
  else if "anomaly" in [tags] or "alert" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      user => "elastic"
      password => "${ELASTIC_PASSWORD}"
      index => "sentient-alerts-%{+YYYY.MM.dd}"
      template_name => "sentient-alerts"
      template_pattern => "sentient-alerts-*"
      template => {
        "mappings" => {
          "properties" => {
            "@timestamp" => { "type" => "date" }
            "level" => { "type" => "keyword" }
            "message" => { "type" => "text" }
            "category" => { "type" => "keyword" }
            "classification" => { "type" => "keyword" }
            "droneId" => { "type" => "keyword" }
            "missionId" => { "type" => "keyword" }
            "metadata" => {
              "properties" => {
                "anomalyType" => { "type" => "keyword" }
                "severity" => { "type" => "keyword" }
                "confidence" => { "type" => "float" }
              }
            }
          }
        }
        "settings" => {
          "number_of_shards" => 1
          "number_of_replicas" => 1
          "index.lifecycle.name" => "sentient-alerts-policy"
        }
      }
    }
  }

  # General application logs
  else {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      user => "elastic"
      password => "${ELASTIC_PASSWORD}"
      index => "sentient-application-%{+YYYY.MM.dd}"
      template_name => "sentient-application"
      template_pattern => "sentient-application-*"
      template => {
        "mappings" => {
          "properties" => {
            "@timestamp" => { "type" => "date" }
            "level" => { "type" => "keyword" }
            "message" => { "type" => "text" }
            "category" => { "type" => "keyword" }
            "service" => { "type" => "keyword" }
            "version" => { "type" => "keyword" }
            "environment" => { "type" => "keyword" }
            "hostname" => { "type" => "keyword" }
            "correlationId" => { "type" => "keyword" }
            "userId" => { "type" => "keyword" }
            "username" => { "type" => "keyword" }
            "success" => { "type" => "boolean" }
            "duration" => { "type" => "long" }
            "metadata" => { "type" => "object", "enabled" => false }
          }
        }
        "settings" => {
          "number_of_shards" => 1
          "number_of_replicas" => 0
          "index.lifecycle.name" => "sentient-application-policy"
        }
      }
    }
  }

  # Dead letter queue for failed processing
  if "_logstash_parsing_error" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      user => "elastic"
      password => "${ELASTIC_PASSWORD}"
      index => "sentient-errors-%{+YYYY.MM.dd}"
    }
  }

  # Optional: Send critical alerts to external systems
  if "high_priority" in [tags] {
    # Webhook for external alerting system
    http {
      url => "http://alertmanager:9093/api/v1/alerts"
      http_method => "post"
      content_type => "application/json"
      format => "json"
      mapping => {
        "alerts" => [
          {
            "labels" => {
              "alertname" => "SentientEdgeCriticalAlert"
              "severity" => "critical"
              "service" => "sentient-edge"
              "category" => "%{category}"
              "environment" => "%{environment}"
            }
            "annotations" => {
              "summary" => "%{message}"
              "description" => "Critical alert from SentientEdge: %{message}"
              "timestamp" => "%{@timestamp}"
            }
          }
        ]
      }
    }
  }

  # Debug output for development
  if [environment] == "development" {
    stdout {
      codec => rubydebug {
        metadata => true
      }
    }
  }
}